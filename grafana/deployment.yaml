apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.4.14
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-creds
              key: username
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-creds
              key: password
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3 
        volumeMounts:
        - name: grafana-dashboard-provider-volume
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-datasource-volume
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-storage
          mountPath: /var/lib/grafana  # Default Grafana data path

      volumes:
      - name: grafana-dashboard-provider-volume
        configMap:
          name: grafana-dashboard-provider
      - name: grafana-datasource-volume
        configMap:
          name: grafana-datasources
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc